<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="profinet_UR3" Id="{d18b64b2-e39a-4738-8f59-1b8b44646b96}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM profinet_UR3
VAR
END_VAR

VAR_INPUT
	state : INT:=-1;
	state0 : INT:= -1; 
	state1 : INT:= -1;
	state2 : INT:= -1;
	ck0 : INT;
	ck1 : INT;
	ck2 : INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//escribir del plc al robot 
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);

//leer del robot al plc
ck0 := flip_byte_int(Robot_UR3.UR_outputs_int.INT3);
ck1 := flip_byte_int(Robot_UR3.UR_outputs_int.INT4);
ck2 := flip_byte_int(Robot_UR3.UR_outputs_int.INT5);

state0:=state;
state1:=state;
state2:=state;

IF (ck0=301 AND ck1=301 AND ck2=301) OR (ck0<>301 AND ck1=301 AND ck2=301) OR (ck0=301 AND ck1<>301 AND ck2=301) OR (ck0=301 AND ck1=301 AND ck2<>301) THEN
state:=-1;
state0 := -1;
state1 := -1;
state2 := -1;
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);
ELSIF (ck0=311 AND ck1=311 AND ck2=311) OR (ck0<>311 AND ck1=311 AND ck2=311) OR (ck0=311 AND ck1<>311 AND ck2=311) OR (ck0=311 AND ck1=311 AND ck2<>311) THEN
state:=-1;	
state0 := -1;
state1 := -1;
state2 := -1;
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);
ELSIF (ck0=321 AND ck1=321 AND ck2=321) OR (ck0<>321 AND ck1=321 AND ck2=321) OR (ck0=321 AND ck1<>321 AND ck2=321) OR (ck0=321 AND ck1=321 AND ck2<>321) THEN
state:=-1;	
state0 := -1;
state1 := -1;
state2 := -1;
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);
ELSIF (ck0=331 AND ck1=331 AND ck2=331) OR (ck0<>331 AND ck1=331 AND ck2=331) OR (ck0=331 AND ck1<>331 AND ck2=331) OR (ck0=331 AND ck1=331 AND ck2<>331) THEN
state:=-1;	
state0 := -1;
state1 := -1;
state2 := -1;
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);
ELSIF (ck0=341 AND ck1=341 AND ck2=341) OR (ck0<>341 AND ck1=341 AND ck2=341) OR (ck0=341 AND ck1<>341 AND ck2=341) OR (ck0=341 AND ck1=341 AND ck2<>341) THEN
state:=-1;	
state0 := -1;
state1 := -1;
state2 := -1;
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);
ELSIF (ck0=351 AND ck1=351 AND ck2=351) OR (ck0<>351 AND ck1=351 AND ck2=351) OR (ck0=351 AND ck1<>351 AND ck2=351) OR (ck0=351 AND ck1=351 AND ck2<>351) THEN
state:=-1;	
state0 := -1;
state1 := -1;
state2 := -1;
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);
ELSIF (ck0=361 AND ck1=361 AND ck2=361) OR (ck0<>361 AND ck1=361 AND ck2=361) OR (ck0=361 AND ck1<>361 AND ck2=361) OR (ck0=361 AND ck1=361 AND ck2<>361) THEN
state:=-1;	
state0 := -1;
state1 := -1;
state2 := -1;
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);
ELSIF (ck0=371 AND ck1=371 AND ck2=371) OR (ck0<>371 AND ck1=371 AND ck2=371) OR (ck0=371 AND ck1<>371 AND ck2=371) OR (ck0=371 AND ck1=371 AND ck2<>371) THEN
state:=-1;
state0 := -1;
state1 := -1;
state2 := -1;
Robot_UR3.UR_inputs.Ints.INT0 := flip_int(state0);
Robot_UR3.UR_inputs.Ints.INT1 := flip_int(state1);
Robot_UR3.UR_inputs.Ints.INT2 := flip_int(state2);	
END_IF]]></ST>
    </Implementation>
    <LineIds Name="profinet_UR3">
      <LineId Id="21" Count="1" />
      <LineId Id="6" Count="0" />
      <LineId Id="35" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="127" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="128" Count="1" />
      <LineId Id="8" Count="1" />
      <LineId Id="130" Count="0" />
      <LineId Id="152" Count="1" />
      <LineId Id="40" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="41" Count="1" />
      <LineId Id="76" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="150" Count="1" />
      <LineId Id="86" Count="2" />
      <LineId Id="83" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="148" Count="1" />
      <LineId Id="92" Count="2" />
      <LineId Id="89" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="146" Count="1" />
      <LineId Id="98" Count="2" />
      <LineId Id="95" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="144" Count="1" />
      <LineId Id="104" Count="2" />
      <LineId Id="101" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="142" Count="1" />
      <LineId Id="110" Count="2" />
      <LineId Id="107" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="140" Count="1" />
      <LineId Id="116" Count="2" />
      <LineId Id="113" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="137" Count="2" />
      <LineId Id="122" Count="2" />
      <LineId Id="119" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>